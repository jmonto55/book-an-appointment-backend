---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/houses":
    post:
      summary: Creates a house
      tags:
      - Houses
      parameters: []
      responses:
        '201':
          description: House created successfully
        '422':
          description: Invalid Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                night_price:
                  type: integer
                city:
                  type: string
                description:
                  type: string
                photo:
                  type: string
              required:
              - name
              - address
              - night_price
              - description
              - photo
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                night_price:
                  type: integer
                city:
                  type: string
                description:
                  type: string
                photo:
                  type: string
              required:
              - name
              - address
              - night_price
              - description
              - photo
    get:
      summary: Retrieves all houses
      tags:
      - Houses
      responses:
        '200':
          description: House found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    night_price:
                      type: integer
                    city:
                      type: string
                    description:
                      type: string
                    photo:
                      type: string
                  required:
                  - id
                  - name
                  - address
                  - night_price
                  - description
                  - photo
            application/xml:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    address:
                      type: string
                    night_price:
                      type: integer
                    city:
                      type: string
                    description:
                      type: string
                    photo:
                      type: string
                  required:
                  - id
                  - name
                  - address
                  - night_price
                  - description
                  - photo
  "/houses/{id}":
    get:
      summary: Retrieves a house
      tags:
      - Houses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: House found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  night_price:
                    type: integer
                  city:
                    type: string
                  description:
                    type: string
                  photo:
                    type: string
                required:
                - id
                - name
                - address
                - night_price
                - description
                - photo
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  address:
                    type: string
                  night_price:
                    type: integer
                  city:
                    type: string
                  description:
                    type: string
                  photo:
                    type: string
                required:
                - id
                - name
                - address
                - night_price
                - description
                - photo
        '404':
          description: House not found
    delete:
      summary: Delete house
      tags:
      - Houses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: House deleted
        '404':
          description: House not found
  "/reservations":
    get:
      summary: Retrieves a list of reservations
      tags:
      - Reservations
      responses:
        '200':
          description: Reservation list found
    post:
      summary: Creates a new reservation
      tags:
      - Reservations
      parameters: []
      responses:
        '201':
          description: Reservation Created Successfully
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                user_id:
                  type: integer
                house_id:
                  type: integer
              required:
              - check_in
              - check_out
              - user_id
              - house_id
  "/reservations/{id}":
    get:
      summary: Retrieves a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Reservation Found
        '404':
          description: Not Found
    put:
      summary: Updates a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Reservation Updated Successfully
        '404':
          description: Reservation Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                user_id:
                  type: integer
                house_id:
                  type: integer
              required:
              - check_in
              - check_out
              - user_id
              - house_id
    delete:
      summary: Deletes a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Reservation with ID Not Found
    patch:
      summary: Update a reservation
      tags:
      - Reservations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Reservation Updated Successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                check_in:
                  type: string
                  format: date
                check_out:
                  type: string
                  format: date
                user_id:
                  type: integer
                house_id:
                  type: integer
              required:
              - check_in
              - check_out
              - user_id
              - house_id
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: "localhost:3000"
